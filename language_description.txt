?<var_name> => assign as a parameter.

assign value:
    parse value tree
    assign all values of terminal
    all value names must be like ___<is_parameter>_<num>
    only watches rvalue except ?=(reflect function)

assign process:
    copy original source

pp=r'[\+\-\*\/\@\s]'

<<n,m>>     [__pp__].   ?       => <<n,m>>  [__pp__]     torch.FloatTensor(n,m,require_grads=True)
<<n,m>>     @           ?(<j>)  => <<n,m>>  @            torch.FloatTensor(m,j,require_grads=True)

?       [__pp__]    <<n,m>>     => torch.FloatTensor(n,m,require_grads=True) [__pp__]   <<n,m>> 
?(<j>)  @           <<n,m>>     => torch.FloatTensor(j,n,require_grads=True) @          <<n,m>>




#internally torch's
linspace(-math.pi, 1.*math.pi, 2000, dtype=dtype) => torch.linspace(-math.pi, 1.*math.pi, 2000, dtype=dtype)



order:
" ? " -> " <<autogen>> " :
    r'\?{pp}' -> '<<autogen>> '
" ?(4) " -> "<<autogen>>(4)" :
    r'\?(\([\d.]+\))' -> '<<autogen>>(\1)'
" ?2.1 " -> "torch.FloatTensor([2.1],require_grads=True)" :
    r'\?([\d.]+)' -> 'torch.FloatTensor([\1],require_grads=True)'