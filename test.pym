
model LinearRegression:
    hidden_1st := X*?W1
    hidden_2nd := hidden_1st*?(4)
    out = hidden_2nd*?(1)
    Y ?= out


xa.vi.er.viv.ss.bob.we.void()


!loss MSE
!optimizer(2000) Adam(1e-6)
!activator ReLU
model LinearRegression:
    Y ?= ?a*$1

model Arithmetic:
    3 ?= ?4-$1


!loss MSELoss(reduction='sum')
!optimizer(2000) SGD(lr=1e-6)
model Polynomial3:
    #https://pytorch.org/tutorials/beginner/pytorch_with_examples.html
    x = linspace(-math.pi, 1.*math.pi, 2000, dtype=dtype)
    y = sin(x)
    
    y ?= ?0 + ?0.*x + ?0*x**2 + ?0*x**3

model SimpleExample:
    10 ?= ? * $2

model SimpleExampleSequence:
    [10,20,30,40] ?= ?1 * $[2,4,6,8]


model SimpleExample2:
    10 ?= ? * $2 * ?* ?

!activator ReLU
model Xor:
    [0,1,1,0] ?= ($[[0,0],[0,1],[1,0],[0,0]]+?) * ? #? automatically converted as 2x1


model AutoConvert:
    10 ?= ?2 + ?2.1 * ? @ ?(4) * ? @ ?(1)



!optimizer(20) SGD(lr=1e-5) 
model MiniBatch:
    x_train  =  $FloatTensor([[73,  80,  75], 
                                [93,  88,  93], 
                                [89,  91,  90], 
                                [96,  98,  100],   
                                [73,  66,  70]])  
    y_train  =  FloatTensor([[152], [185], [180], [196], [142]])

    y_train ?= x_train @ ?(1)